{"version":3,"sources":["../node_modules/jsdom/lib/jsdom sync","../node_modules/parse5/lib sync","models/FriendRequest.js","models/BlockstackUser.js","Person/PersonTop.jsx","Chat/ChatListItem.jsx","Chat/FriendList.jsx","models/Post.js","Shared/photo.js","Post/NewPost.jsx","Camera/CameraTools.jsx","Camera/CameraModal.jsx","Home/PostCard.jsx","Home/HomeFeed.jsx","Home/Home.jsx","Profile/Profile.jsx","Nav/Signin.jsx","Nav/FriendSearch.jsx","Nav/FriendRequestItem.jsx","Nav/FriendRequests.jsx","Nav/Nav.jsx","Chat/NewChat.jsx","Chat/ChatList.jsx","models/Message.js","Chat/MessageInput.jsx","Shared/timestamp.js","Chat/MessageItem.jsx","Chat/ChatRoom.jsx","Chat/Chat.jsx","App.jsx","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","FriendRequest","Model","className","schema","sender","type","String","decrypted","required","recipient","userGroupId","BlockstackUser","User","friends","Array","PersonTop","props","state","person","name","avatarUrl","this","getProfile","prevProps","username","lookupProfile","then","profile","setState","Person","catch","error","style","backgroundImage","backgroundPosition","backgroundSize","backgroundRepeat","Component","ChatListItem","friendName","friendAvatar","getGroupHead","group","attrs","members","currentUser","_id","Link","to","FriendList","groups","getMyChats","userGroup","myGroups","finalGroups","length","push","findOne","console","log","sendPhoto","Fragment","map","selectChat","onClick","bind","Post","caption","base64","post","save","byteArray","ArrayBuffer","defaults","Photo","b64Data","byteCharacters","atob","byteNumbers","i","charCodeAt","Uint8Array","byteData","blob","Blob","URL","createObjectURL","NewPost","img","createPost","finally","closeModal","history","event","target","value","placeholder","onChange","handleChange","data-toggle","title","color","withRouter","CameraTools","background","hex","setPenColor","handleChangeComplete","Modal","setAppElement","customStyles","content","top","left","right","bottom","marginRight","transform","padding","CameraModal","cam","React","createRef","_sketch","isTakingPicture","showSendOption","penColor","text","_img","current","getScreenshot","_onBackgroundImageDrop","chatRoomId","split","setBackgroundFromDataUrl","stretched","stretchedX","stretchedY","originX","originY","addText","isOpen","modalIsOpen","onRequestClose","contentLabel","ref","mirrored","takePicture","width","height","tool","Tools","Pencil","lineColor","lineWidth","resetPicture","_addText","readyToSend","PostCard","position","src","HomeFeed","posts","isLoading","fetchPosts","cameraModalIsOpen","fetchList","sort","paddingTop","Home","size","openCameraModal","closeCameraModal","Profile","handleSignOut","userSession","isSignInPending","align","loadUserData","Signin","handleSignIn","FriendSearch","input","searchedUsers","trim","$regex","_searchedUsers","fr","UserGroup","create","a","async","makeGroupMembership","memberShip","request","invitationId","fontFamily","onChangeHandler","user","addFriend","class","FriendRequestItem","description","groupInvitation","findById","invitation","activate","acceptFR","FriendRequests","frButtonClicked","friendRequests","isloading","decrypt","_requests","getFriendRequests","Nav","searchOpened","href","alt","data-target","closeSearch","onMouseEnter","openSearch","ChatList","newChatModalIsOpen","Message","txt","msg","binary","byte","duration","Number","require","MessageInput","newComment","characters","showEmojiPicker","emoji","native","key","preventDefault","sendTextMsg","newMessage","sendMessage","b64tobinary","sendPhotoMsg","appropriateLengthWords","substring","TEXT_LIMIT","display","flexDirection","onKeyDown","alignSelf","toggleEmojiPicker","set","onSelect","addEmoji","TimeStamp","posted","postedTime","Date","timeDiff","timeString","secDiff","Math","floor","toString","minDiff","hourDiff","dayDiff","toLocaleDateString","year","month","day","MessageItem","toBlob","convertDate","createdAt","ChatRoom","messageList","addStreamListener","message","match","params","fetchMessages","startLoading","endLoading","messages","_messages","Chat","selectedFriend","appConfig","AppConfig","UserSession","configure","apiServer","config","logLevel","App","redirectToSignIn","signUserOut","window","location","origin","isUserSignedIn","Switch","Route","exact","path","Redirect","handlePendingSignIn","userData","replaceState","document","createWithCurrentUser","ReactDOM","render","BrowserRouter","getElementById"],"mappings":"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","file":"static/js/main.af26d2fe.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 1216;","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 1247;","import { Model } from 'radiks';\r\n\r\nexport default class FriendRequest extends Model {\r\n    static className = 'FriendRequest';\r\n    static schema = {\r\n      sender: { type: String, decrypted : true, required : true }, \r\n      recipient: {type: String, decrypted : true,  required : true },\r\n      userGroupId : {type: String, decrypted : true,  required : true }\r\n    };\r\n}\r\n","import { User } from 'radiks';\r\n\r\n// For example I want to add a public name on my user model\r\nexport default class BlockstackUser extends User {\r\n  static schema = {\r\n    ...User.schema,\r\n    friends: {\r\n      type: Array,\r\n      // decrypted: true,\r\n    },\r\n  };\r\n}","import React, { Component } from \"react\";\r\nimport { User } from \"radiks\";\r\nimport { Person, lookupProfile } from \"blockstack\";\r\nimport BlockstackUser from \"../models/BlockstackUser\";\r\nconst defaultProfile = \"/images/butt-profile.jpeg\";\r\n\r\nexport default class PersonTop extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      person: {\r\n        name() {\r\n          return \"Nudist\";\r\n        },\r\n        avatarUrl() {\r\n          return defaultProfile;\r\n        }\r\n      }\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.getProfile();\r\n  }\r\n  componentDidUpdate(prevProps) {\r\n    if(prevProps.username !== this.props.username){\r\n      this.getProfile();\r\n    }\r\n  }\r\n  getProfile() {\r\n    const { username } = this.props;\r\n    lookupProfile(username)\r\n      .then(profile => {\r\n        this.setState({\r\n          person: new Person(profile)\r\n        });\r\n      })\r\n      .catch(error => {});\r\n  }\r\n  render() {\r\n    const { person } = this.state;\r\n    const { username } = this.props;\r\n\r\n    return (\r\n        <div className=\"person-top\">\r\n          <div\r\n            className=\"photos\"\r\n            style={{\r\n              backgroundImage: `url(${person.avatarUrl()})`,\r\n              backgroundPosition: \"center\",\r\n              backgroundSize: \"cover\",\r\n              backgroundRepeat: \"no-repeat\"\r\n            }}\r\n          />\r\n          <div>\r\n            <div className=\"person-top-name\">{person.name()}</div>\r\n            <div className=\"person-top-username\">{username}</div>\r\n          </div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { User, UserGroup } from \"radiks\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PersonTop from \"../Person/PersonTop\";\r\nconst defaultProfile = \"/images/butt-profile.jpeg\";\r\nexport default class ChatListItem extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      friendName: \"Nudist\",\r\n      friendAvatar: defaultProfile\r\n    };\r\n  }\r\n  componentDidMount(){\r\n    this.getGroupHead()\r\n\r\n  }\r\n\r\n  componentDidUpdate(prevProps){\r\n    if (prevProps.group !== this.props.group){\r\n      this.getGroupHead()\r\n    }\r\n  }\r\n\r\n  getGroupHead(){\r\n    const { group } = this.props;\r\n\r\n    if (group && group.attrs.members[0].username === User.currentUser()._id) {\r\n      this.setState({\r\n        friendName : group.attrs.members[1].username\r\n      })\r\n    } else if (group){\r\n      this.setState({\r\n        friendName : group.attrs.members[0].username\r\n      })\r\n    }\r\n  }\r\n  render() {\r\n    const { group } = this.props;\r\n    return (\r\n      <Link to={`/chat/${group.attrs._id}`}>\r\n        <div className=\"friend-item\">\r\n          <PersonTop username = {this.state.friendName}/>\r\n        </div>\r\n      </Link>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { User } from \"radiks\";\r\nimport { Person, lookupProfile } from \"blockstack\";\r\nimport BlockstackUser from \"../models/BlockstackUser\";\r\nimport PersonTop from \"../Person/PersonTop\";\r\nimport ChatListItem from \"./ChatListItem\";\r\nimport userGroup from \"radiks/lib/models/user-group\";\r\nconst defaultProfile = \"/images/butt-profile.jpeg\";\r\n\r\nexport default class FriendList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      groups: []\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.getMyChats();\r\n  }\r\n  async getMyChats() {\r\n    const groups = await userGroup.myGroups();\r\n    let finalGroups = [];\r\n    for (let group of groups) {\r\n      if (group.attrs.members.length === 2) {\r\n        finalGroups.push(group);\r\n      }\r\n    }\r\n    this.setState({\r\n      groups: finalGroups\r\n    });\r\n  }\r\n  getFriends() {\r\n    const me = BlockstackUser.findOne({ username: User.currentUser()._id });\r\n  }\r\n\r\n  sendPhoto(group){\r\n    console.log(group)\r\n    this.props.sendPhoto(group.attrs._id)\r\n  }\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <h1>Friend List</h1>\r\n        <div>\r\n          <ul className=\"list-group\">\r\n            {this.state.groups.map(group => {\r\n              return (\r\n                <li className=\"list-group-item friend-list\">\r\n                  {/* <PersonTop username=\"tateyeetman.id.blockstack\"/>\r\n                  <div>\r\n                    <button\r\n                      className=\"btn btn-light add-friend-butt\"\r\n                      onClick={this.props.selectFriend}\r\n                    >\r\n                      Send\r\n                    </button>\r\n                  </div> */}\r\n                  <ChatListItem\r\n                    group={group}\r\n                    selectChat={this.props.selectChat}\r\n                  />\r\n                  <button\r\n                    className=\"btn btn-light add-friend-butt\"\r\n                    onClick={this.sendPhoto.bind(this, group)}\r\n                  >\r\n                    Send\r\n                  </button>\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","import { Model, User } from \"radiks\";\r\n\r\nexport default class Post extends Model {\r\n  static className = \"Post\";\r\n  static schema = {\r\n    username : {\r\n      type: String,\r\n      decrypted : true,\r\n      required : true\r\n    },\r\n    caption: {\r\n      type: String,\r\n      decrypted : true,\r\n      required : true\r\n    },\r\n    byteArray: {\r\n      type: ArrayBuffer,\r\n      // decrypted : true\r\n      // required : true\r\n    },\r\n    base64: {\r\n      type: String,\r\n      decrypted : true,\r\n      required : true\r\n    }\r\n    // userGroupId: {\r\n    //   type: String,\r\n    //   decrypted: true,\r\n    //   required : true\r\n    // }\r\n\r\n  };\r\n  static defaults = {\r\n  }\r\n  static async createPost(caption, base64){\r\n    const post = new Post({\r\n      username : User.currentUser()._id,\r\n      caption : caption,\r\n      base64 : base64,\r\n      // userGroupId : userGroupId\r\n    })\r\n    await post.save()\r\n    return post;\r\n  }\r\n}","export default class Photo {\r\n  static b64tobinary(b64Data) {\r\n    const byteCharacters = atob(b64Data);\r\n    const byteNumbers = new Array(byteCharacters.length);\r\n    for (let i = 0; i < byteCharacters.length; i++) {\r\n      byteNumbers[i] = byteCharacters.charCodeAt(i);\r\n    }\r\n    return new Uint8Array(byteNumbers);\r\n  }\r\n  static toBlob(byteData){\r\n    const blob = new Blob([byteData], {type: 'image/jpg'});\r\n    return URL.createObjectURL(blob);\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport {\r\n  Person,\r\n} from 'blockstack';\r\nimport FriendList from '../Chat/FriendList';\r\nimport { Send } from 'react-feather';\r\nimport Post from '../models/Post';\r\nimport { withRouter } from 'react-router-dom';\r\nimport Photo from '../Shared/photo';\r\n\r\nconst avatarFallbackImage = 'https://s3.amazonaws.com/onename/avatar-placeholder.png';\r\n\r\nclass NewPost extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      caption : '',\r\n    }\r\n  }\r\n \r\n  post(){\r\n    const {img} = this.props;\r\n    // const byteData = Photo.b64tobinary(img.split(\",\")[1])\r\n    \r\n    Post.createPost(this.state.caption, img).finally(()=> {\r\n      this.props.closeModal()\r\n      this.props.history.push(`/`)\r\n    });\r\n\r\n  }\r\n  handleChange(event) {\r\n    this.setState({\r\n      caption: event.target.value,\r\n    });\r\n  }\r\n  \r\n \r\n  render(){\r\n    return(\r\n      <div className=\"new-post\">\r\n        <div>\r\n        <textarea placeholder=\"write something juicy\" \r\n         value={this.state.caption}\r\n         onChange={this.handleChange.bind(this)}></textarea>\r\n        </div>\r\n        <div className=\"new-post-send-list\">\r\n          <input className=\"form-control\" placeholder=\"Send as post or Slice thru DM\"/>\r\n          <button className=\"btn btn-light bg-salmon\" onClick={this.post.bind(this)} data-toggle=\"tooltip\" title=\"Send as post\">\r\n            <Send color={'white'}/></button>\r\n        </div>\r\n        <FriendList sendPhoto={this.props.sendPhoto}/>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default withRouter(NewPost)","import React, { Component } from \"react\";\r\nimport { HuePicker } from \"react-color\";\r\n\r\nexport default class CameraTools extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      color : '#000'\r\n    };\r\n  }\r\n  handleChangeComplete(color) {\r\n    this.setState({ background: color.hex });\r\n    this.props.setPenColor(color.hex)\r\n  }\r\n  render() {\r\n    return (\r\n      <HuePicker\r\n        color={this.state.background}\r\n        onChange={this.handleChangeComplete.bind(this)}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Camera, XCircle, Send, Type } from \"react-feather\";\r\nimport Webcam from \"react-webcam\";\r\nimport Modal from \"react-modal\";\r\nimport NewPost from \"../Post/NewPost\";\r\nimport { SketchField, Tools } from \"react-sketch\";\r\nimport CameraTools from \"./CameraTools\";\r\n\r\nModal.setAppElement(\"body\");\r\n\r\nconst customStyles = {\r\n  content: {\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    right: \"auto\",\r\n    bottom: \"auto\",\r\n    marginRight: \"-50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n    padding: \"0px\"\r\n    // width : '100%',\r\n    // height: '100%'\r\n  }\r\n};\r\n\r\nexport default class CameraModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.cam = React.createRef();\r\n    this._sketch = React.createRef();\r\n    this.state = {\r\n      img: null,\r\n      isTakingPicture: true,\r\n      showSendOption: false,\r\n      penColor: \"#000\",\r\n      text: \"Click here to edit text\"\r\n    };\r\n  } //monkey monkey monkey monkey monkey monkey monkey monkey\r\n\r\n  takePicture() {\r\n    const _img = this.cam.current.getScreenshot();\r\n\r\n    this.setState({ img: _img, isTakingPicture: false }, () =>\r\n      this._onBackgroundImageDrop(_img)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * send picture via chat\r\n   */\r\n  sendPhoto(chatRoomId) {\r\n    this.props.sendPhoto(this.state.img.split(\",\")[1], chatRoomId);\r\n    this.props.closeModal();\r\n  }\r\n\r\n  /**\r\n   * when user ready click show friendlist\r\n   */\r\n  readyToSend() {\r\n    this.setState({\r\n      showSendOption: true\r\n    });\r\n  }\r\n\r\n  _onBackgroundImageDrop(img) {\r\n    let sketch = this._sketch.current;\r\n    sketch.setBackgroundFromDataUrl(img, {\r\n      stretched: true,\r\n      stretchedX: false,\r\n      stretchedY: false,\r\n      originX: \"left\",\r\n      originY: \"top\"\r\n    });\r\n  }\r\n\r\n  _addText() {\r\n    this._sketch.current.addText(this.state.text);\r\n  }\r\n\r\n  setPenColor(color) {\r\n    this.setState({\r\n      penColor: color\r\n    });\r\n  }\r\n  resetPicture() {\r\n    this.setState({ img: null, isTakingPicture: true, showSendOption: false });\r\n  }\r\n  render() {\r\n    return (\r\n      <Modal\r\n        isOpen={this.props.modalIsOpen}\r\n        onRequestClose={this.props.closeModal}\r\n        style={customStyles}\r\n        contentLabel=\"Camera\"\r\n      >\r\n        <div className=\"camera-wrap\">\r\n          {this.state.isTakingPicture ? (\r\n            <>\r\n              <Webcam ref={this.cam} mirrored={true} />\r\n              <button\r\n                className=\"camera-button\"\r\n                onClick={() => {\r\n                  this.takePicture();\r\n                }}\r\n              ></button>\r\n            </>\r\n          ) : (\r\n            <React.Fragment>\r\n              <div className=\"photo-taken\">\r\n                <SketchField\r\n                  width=\"640px\"\r\n                  height=\"480px\"\r\n                  tool={Tools.Pencil}\r\n                  lineColor={this.state.penColor}\r\n                  ref={this._sketch}\r\n                  lineWidth={3}\r\n                />\r\n                <button\r\n                  className=\"btn camera-reset\"\r\n                  onClick={() => {\r\n                    this.resetPicture();\r\n                  }}\r\n                >\r\n                  <XCircle />\r\n                  \r\n                </button>\r\n                <button\r\n                  className=\"btn\"\r\n                  onClick={this._addText.bind(this)}\r\n                >\r\n                <Type />\r\n                </button>\r\n                <button\r\n                  className=\"camera-button camera-send\"\r\n                  onClick={() => {\r\n                    this.readyToSend();\r\n                  }}\r\n                >\r\n                  <Send color=\"rgb(231, 231, 231)\" />\r\n                </button>\r\n                <CameraTools setPenColor={this.setPenColor.bind(this)} />\r\n              </div>\r\n              {this.state.showSendOption && (\r\n                <NewPost\r\n                  img={this.state.img}\r\n                  sendPhoto={this.sendPhoto.bind(this)}\r\n                  closeModal={this.props.closeModal}\r\n                />\r\n              )}\r\n            </React.Fragment>\r\n          )}\r\n        </div>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Photo from \"../Shared/photo\";\r\nimport PersonTop from \"../Person/PersonTop\";\r\nconst defaultProfile = \"/images/butt-profile.jpeg\";\r\n\r\nexport default class PostCard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      img : ''\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    // const {post} = this.props;\r\n    // const img = Photo.toBlob(post.attrs.byteArray);\r\n    // this.setState({\r\n    //   img : img\r\n    // })\r\n  }\r\n  \r\n  render() {\r\n    const {post} = this.props;\r\n    return (\r\n      <div className=\"post-card\">\r\n        <div style={{position : 'relative'}}>\r\n        <div className=\"post-card-name\">\r\n        <PersonTop username={post.attrs.username}/>\r\n        </div>\r\n        <img src={(post.attrs.base64)} width=\"500\"/>\r\n        </div>\r\n        <div>{post.attrs.caption}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport PostCard from \"./PostCard\"\r\nimport Post from \"../models/Post\";\r\nimport ReactLoading from 'react-loading';\r\n\r\nexport default class HomeFeed extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      posts : [],\r\n      isLoading : false\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.setState({\r\n      isLoading : true\r\n    })\r\n    this.fetchPosts().finally(()=>{\r\n      this.setState({\r\n        isLoading : false\r\n      })\r\n    })\r\n  }\r\n\r\n  componentDidUpdate(prevProps){\r\n    if(prevProps.cameraModalIsOpen !== this.props.cameraModalIsOpen && !this.props.cameraModalIsOpen) {\r\n      this.setState({\r\n        isLoading : true\r\n      })\r\n      this.fetchPosts().finally(()=>{\r\n        this.setState({\r\n          isLoading : false\r\n        })\r\n      })\r\n    }\r\n  }\r\n  \r\n  async fetchPosts(){\r\n    const posts = await Post.fetchList({sort: '-createdAt'});\r\n    \r\n    this.setState({\r\n      posts : posts\r\n    })\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"home-feed-wrapper\">\r\n        {this.state.isLoading ? \r\n        <ReactLoading type={'cylon'} color={'grey'} height={100} width={100} />\r\n\r\n        : (this.state.posts.length === 0 ? \r\n        <i style={{paddingTop: '10px'}}>No nudes posted</i> : \r\n        this.state.posts.map(post => {\r\n          return <PostCard post={post}/>\r\n        }))\r\n      }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { UserGroup } from \"radiks/lib\";\r\nimport FriendRequest from \"../models/FriendRequest\";\r\nimport CameraModal from \"../Camera/CameraModal\";\r\nimport { Camera, EyeOff } from \"react-feather\";\r\nimport HomeFeed from \"./HomeFeed\";\r\n\r\nexport default class Home extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      cameraModalIsOpen: false\r\n    };\r\n  }\r\n  componentDidMount() {}\r\n  // async deleteUG(){\r\n  //   const groups = await FriendRequest.fetchOwnList();\r\n  //   console.log(groups)\r\n  //   for(let group of groups){\r\n  //     console.log(group)\r\n  //     await group.destroy()\r\n  //   }\r\n  // }\r\n  openCameraModal() {\r\n    this.setState({\r\n      cameraModalIsOpen: true\r\n    });\r\n  }\r\n  closeCameraModal() {\r\n    this.setState({\r\n      cameraModalIsOpen: false\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"home-wrapper\">\r\n        <HomeFeed cameraModalIsOpen={this.state.cameraModalIsOpen}/>\r\n        <button\r\n          className=\"btn home-hide home-button\"\r\n        >\r\n          <EyeOff size=\"24\" />\r\n        </button>\r\n       \r\n        <button\r\n          className=\"btn home-camera home-button\"\r\n          onClick={this.openCameraModal.bind(this)}\r\n        >\r\n          <Camera size=\"24\" />\r\n        </button>\r\n        <CameraModal\r\n          modalIsOpen={this.state.cameraModalIsOpen}\r\n          closeModal={this.closeCameraModal.bind(this)}\r\n          //  postPhoto={this.sendPhoto.bind(this)}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\nimport {\n  Person,\n} from 'blockstack';\n\nconst avatarFallbackImage = 'https://s3.amazonaws.com/onename/avatar-placeholder.png';\n\nexport default class Profile extends Component {\n  constructor(props) {\n  \tsuper(props);\n\n  \tthis.state = {\n  \t  person: {\n  \t  \tname() {\n          return 'Anonymous';\n        },\n  \t  \tavatarUrl() {\n  \t  \t  return avatarFallbackImage;\n  \t  \t},\n  \t  },\n  \t};\n  }\n\n  render() {\n    const { handleSignOut, userSession } = this.props;\n    const { person } = this.state;\n    return (\n      !userSession.isSignInPending() ?\n      <div className=\"panel-welcome\" id=\"section-2\">\n        <div className=\"avatar-section\" align=\"center\">\n        <div\n                className=\"avatar\"\n                style={{\n                  backgroundImage: `url(${\n                    person.avatarUrl()\n                      ? person.avatarUrl()\n                      : avatarFallbackImage\n                  })`,\n                  backgroundPosition: \"center\",\n                  backgroundSize: \"cover\",\n                  backgroundRepeat: \"no-repeat\"\n                }}\n              />\n        </div>\n        <h1>Hello, <span id=\"heading-name\">{ person.name() ? person.name() : 'Nameless Person' }</span>!</h1>\n        <p className=\"lead\">\n          <button\n            className=\"btn btn-primary btn-lg\"\n            id=\"signout-button\"\n            onClick={ handleSignOut.bind(this) }\n          >\n            Logout\n          </button>\n        </p>\n      </div> : null\n    );\n  }\n\n  componentWillMount() {\n    const { userSession } = this.props;\n    this.setState({\n      person: new Person(userSession.loadUserData().profile),\n    });\n  }\n}\n","import React, { Component } from 'react';\n\nexport default class Signin extends Component {\n\n  render() {\n    const { handleSignIn } = this.props;\n\n    return (\n      <div className=\"panel-landing\" >\n        <div className=\"panel-head\">\n\n        <h1 className=\"landing-heading\">Welcome to Nuddle</h1>\n        <i>Nuddle is a secure space where you can share your saucy photos with your mates. \n          {/* All your private photos are encrypted and only have access by you and the people who you want to share with. */}\n          </i>\n        </div>\n        <div>\n\n        <img src=\"/images/demo.gif\" width=\"700px\"/>\n        </div>\n        <div>\n\n          <button\n            className=\"btn btn-outline-dark btn-lg\"\n            id=\"signin-button\"\n            onClick={ handleSignIn.bind(this) }\n          >\n            Get Naked with Blockstack\n          </button>\n          </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\r\nimport { User, UserGroup } from \"radiks\";\r\nimport FriendRequest from \"../models/FriendRequest\";\r\nimport userGroup from \"radiks/lib/models/user-group\";\r\n\r\nexport default class FriendSearch extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      input: \"\",\r\n      searchedUsers: []\r\n    };\r\n  }\r\n  async onChangeHandler(e) {\r\n    this.setState({\r\n      input: e.target.value\r\n    });\r\n    if (e.target.value.trim() !== \"\") {\r\n      const _searchedUsers = await User.fetchList({\r\n        username: { $regex: e.target.value }\r\n      });\r\n      await this.setState({\r\n        searchedUsers: _searchedUsers\r\n      });\r\n    }\r\n  }\r\n  async addFriend(recipient){\r\n    console.log(recipient)\r\n    const fr = new UserGroup({\r\n      name : 'FriendRequest', \r\n    });\r\n    await fr.create().then(async (fr) => {\r\n      \r\n    });\r\n    const memberShip = await fr.makeGroupMembership(recipient);\r\n    console.log(memberShip)\r\n    console.log(fr)\r\n    const request = new FriendRequest({\r\n      sender : User.currentUser()._id,\r\n      recipient : recipient,\r\n      userGroupId : fr._id,\r\n      invitationId : memberShip._id\r\n    })\r\n    await request.save()\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"nav-link\">\r\n        <input\r\n          id=\"search-input\"\r\n          type=\"text\"\r\n          className=\"form-control friend-search\"\r\n          style={{ fontFamily: \"Arial, FontAwesome\" }}\r\n          placeholder=\"&#xF002; Search for Nudist\"\r\n          value={this.state.input}\r\n          onChange={this.onChangeHandler.bind(this)}\r\n          // onBlur={this.props.closeSearch}\r\n          // onMouseLeave={this.props.closeSearch}\r\n        />\r\n        {this.state.input !== \"\" && (\r\n          <ul className=\"list-group\" id=\"filterHashtag\">\r\n            {this.state.searchedUsers.map(user => {\r\n              return (\r\n                <li className=\"list-group-item seached-user-li\">\r\n                  <div>{user.attrs.username} </div>\r\n                  <div>\r\n                    <button className=\"btn btn-light add-friend-butt\" onClick={this.addFriend.bind(this, user.attrs.username)}>\r\n                      Add friend <i class=\"fas fa-plus\"></i>\r\n                    </button>\r\n                  </div>\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { User } from \"radiks\";\r\nimport { Person, lookupProfile } from \"blockstack\";\r\nimport groupInvitation from \"radiks/lib/models/group-invitation\";\r\nconst defaultProfile = \"/images/butt-profile.jpeg\";\r\n\r\nexport default class FriendRequestItem extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      person : {\r\n        name() {\r\n          return \"Anonymous\";\r\n        },\r\n        avatarUrl() {\r\n          return defaultProfile;\r\n        },\r\n        description() {\r\n          return \"No bio\";\r\n        }\r\n      }\r\n    };\r\n  }\r\n  getProfile() {\r\n    const {fr} = this.props;\r\n\r\n    lookupProfile(fr.attrs.sender)\r\n      .then(profile => {\r\n        this.setState({\r\n          person: new Person(profile)\r\n        });\r\n      })\r\n      .catch(error => {\r\n      });\r\n  }\r\n  async acceptFR(){\r\n    const {fr} = this.props;\r\n    const invitation = await groupInvitation.findById(fr.attrs.invitationId);\r\n    await invitation.activate();\r\n  }\r\n  render(){\r\n    const {fr} = this.props;\r\n\r\n    return(\r\n        <li className=\"list-group-item seached-user-li\">\r\n          {/* <div> */}\r\n            <div>\r\n            <div\r\n                    className=\"photos\"\r\n                    style={{\r\n                      backgroundImage: `url(${defaultProfile})`,\r\n                      backgroundPosition: \"center\",\r\n                      backgroundSize: \"cover\",\r\n                      backgroundRepeat: \"no-repeat\"\r\n                    }}\r\n                  />\r\n            </div>\r\n            <div>\r\n            <div>{fr.attrs.sender} </div>\r\n             <div>\r\n               <button className=\"btn btn-light add-friend-butt\" onClick={this.acceptFR.bind(this)}>\r\n                 Accept \r\n               </button>\r\n               <button className=\"btn btn-light add-friend-butt\">\r\n                 Deny \r\n               </button>\r\n             </div>\r\n            </div>\r\n          {/* </div> */}\r\n           \r\n           </li>\r\n    )\r\n  }\r\n}","\r\nimport React, { Component } from \"react\";\r\nimport BlockstackUser from \"../models/BlockstackUser\";\r\nimport { User, UserGroup, GroupInvitation } from \"radiks\";\r\nimport FriendRequest from \"../models/FriendRequest\";\r\nimport userGroup from \"radiks/lib/models/user-group\";\r\nimport ReactLoading from 'react-loading';\r\nimport FriendRequestItem from \"./FriendRequestItem\";\r\nimport { UserPlus } from \"react-feather\";\r\n\r\nexport default class FriendRequests extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      frButtonClicked : false,\r\n      friendRequests : [],\r\n      isLoading : false\r\n    };\r\n  }\r\n  async getFriendRequests(){\r\n    this.setState({\r\n      frButtonClicked : !this.state.frButtonClicked\r\n    }, async ()=>{\r\n      if (this.state.frButtonClicked) {\r\n        this.setState({\r\n          isloading : true\r\n        })\r\n        const _requests = await FriendRequest.fetchList({recipient : User.currentUser()._id}, {decrypt : true});     \r\n        this.setState({\r\n          isloading : false\r\n        })\r\n        // const invitation = await GroupInvitation.findById(requests[requests.length-1].attrs.invitationId);\r\n        // await invitation.activate();\r\n        // const group = await UserGroup.find(requests[requests.length-1].attrs.userGroupId);\r\n        // console.log(group)\r\n        this.setState({\r\n          friendRequests : _requests          \r\n        })\r\n         \r\n      }\r\n    })\r\n   \r\n\r\n  }\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n      <button className=\"nav-link btn\" onClick={this.getFriendRequests.bind(this)} data-toggle=\"tooltip\" title=\"Check friend requests\">\r\n        <UserPlus/>\r\n      </button>\r\n      {this.state.frButtonClicked && (\r\n      <div className=\"fr-dropdown\">  \r\n        {this.state.isloading ? \r\n        <ReactLoading type={'cylon'} color={'white'} height={100} width={100} />\r\n        :\r\n        (this.state.friendRequests.length === 0 ?\r\n      <div>Aw it's okay little boo if noone wanna see your nud</div>\r\n       :\r\n       <ul className=\"list-group\">\r\n       {this.state.friendRequests.map(fr => {\r\n         return (\r\n           <FriendRequestItem fr = {fr}/>\r\n         );\r\n       })}\r\n      </ul>)}</div>)\r\n      }\r\n     </React.Fragment>\r\n    )\r\n  }\r\n}","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport FriendSearch from \"./FriendSearch\";\r\nimport FriendRequests from \"./FriendRequests\";\r\nimport { Menu, LogOut, RefreshCcw, MessageSquare, Search } from \"react-feather\";\r\nconst defaultProfile = \"/images/butt-profile.jpeg\";\r\n\r\nexport default class Nav extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      searchOpened: false\r\n    };\r\n  }\r\n  openSearch() {\r\n    this.setState({\r\n      searchOpened: true\r\n    });\r\n  }\r\n  closeSearch() {\r\n    this.setState({\r\n      searchOpened: false\r\n    });\r\n  }\r\n  render() {\r\n    const { handleSignOut, userSession } = this.props;\r\n    const { person } = this.state;\r\n    return (\r\n      <nav className=\"navbar navbar-expand-md bg-light justify-content-md-center justify-content-start\">\r\n        <a className=\"navbar-brand d-md-none d-inline\" href=\"\">\r\n        <img src=\"/favicon.ico\" width=\"30\" height=\"30\" alt=\"\"/>\r\n        </a>\r\n        <button\r\n          className=\"navbar-toggler ml-1\"\r\n          type=\"button\"\r\n          data-toggle=\"collapse\"\r\n          data-target=\"#collapsingNavbar2\"\r\n        >\r\n          <Menu color=\"#252631\"/>\r\n        </button>\r\n        {this.state.searchOpened ? (\r\n          <FriendSearch closeSearch={this.closeSearch.bind(this)} />\r\n        ) : (\r\n          <a className=\"nav-link\" onMouseEnter={this.openSearch.bind(this)}>\r\n            <Search/>\r\n          </a>\r\n        )}\r\n        <div\r\n          className=\"navbar-collapse collapse justify-content-between align-items-center w-100\"\r\n          id=\"collapsingNavbar2\"\r\n        >\r\n          <ul className=\"navbar-nav mx-auto text-md-center text-left\">\r\n            {/* <li class=\"nav-item\">\r\n                <a class=\"nav-link\" href=\"#\">Link</a> \r\n            </li>\r\n            <li class=\"nav-item\">\r\n                <a class=\"nav-link\" href=\"#\">Link</a>\r\n            </li> */}\r\n            <li className=\"nav-item my-auto\">\r\n              <Link\r\n                className=\"nav-link navbar-brand mx-0 d-none d-md-inline\"\r\n                to=\"/\"\r\n              >\r\n                Nuddle\r\n              </Link>\r\n            </li>\r\n            {/* <li class=\"nav-item\">\r\n                <a class=\"nav-link\" href=\"#\">Link</a> \r\n            </li>\r\n            <li class=\"nav-item\">\r\n                <a class=\"nav-link\" href=\"#\">Link</a> \r\n            </li> */}\r\n          </ul>\r\n          <ul className=\"nav navbar-nav flex-row justify-content-md-center justify-content-start flex-nowrap\">\r\n            <li className=\"nav-item\">\r\n              <FriendRequests />\r\n            </li>\r\n\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/chat\" data-toggle=\"tooltip\" title=\"Chat\">\r\n                <MessageSquare/>\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\" data-toggle=\"tooltip\" title=\"Refresh feed\">\r\n              <a className=\"nav-link\" >\r\n                <RefreshCcw/>\r\n              </a>\r\n            </li>\r\n            <li className=\"nav-item\" data-toggle=\"tooltip\" title=\"Refresh feed\">\r\n              <a className=\"nav-link\"onClick={this.props.handleSignOut} >\r\n                <LogOut/>\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n\r\n      //   <nav className=\"navbar navbar-dark navbar-static-top\">\r\n      //   <a className=\"navbar-brand\" href=\"https://nuddle.me\">\r\n      //     <img src={defaultProfile} alt=\"nuddle logo\" width=\"100px\"/>\r\n      //   </a>\r\n      //   <button\r\n      //       className=\"navbar-toggler\"\r\n      //       type=\"button\"\r\n      //       data-toggle=\"collapse\"\r\n      //       data-target=\"#navbarNavAltMarkup\"\r\n      //       aria-controls=\"navbarNavAltMarkup\"\r\n      //       aria-expanded=\"false\"\r\n      //       aria-label=\"Toggle navigation\"\r\n      //     >\r\n      //       <span className=\"navbar-toggler-icon\"></span>\r\n      //     </button>\r\n      //   <FriendSearch/>\r\n      //   <FriendRequests/>\r\n      //   <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\r\n      //     <div className=\"navbar-nav ml-auto\">\r\n      //     {/* {userSession.isUserSignedIn() && ( */}\r\n      //           <Link\r\n      //             to={\"/profile\"}\r\n      //             className=\"nav-item\"\r\n      //           >\r\n      //             Profile\r\n      //           </Link>\r\n      //         {/* )} */}\r\n      //     </div>\r\n      //   </div>\r\n      // </nav>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Modal from 'react-modal';\r\nimport FriendList from \"./FriendList\";\r\nModal.setAppElement('body')\r\n\r\nconst customStyles = {\r\n  content : {\r\n    top                   : '50%',\r\n    left                  : '50%',\r\n    right                 : 'auto',\r\n    bottom                : 'auto',\r\n    marginRight           : '-50%',\r\n    transform             : 'translate(-50%, -50%)',\r\n    width : '500px'\r\n  }\r\n};\r\n\r\nexport default class NewChat extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    };\r\n  } \r\n  render() {\r\n    return (\r\n      <Modal\r\n        isOpen={this.props.modalIsOpen}\r\n        onRequestClose={this.props.closeModal}\r\n        style={customStyles}\r\n        contentLabel=\"New Chat\"\r\n      >\r\n        <FriendList/>\r\n     </Modal>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { User, UserGroup } from \"radiks\";\r\nimport NewChat from \"./NewChat\"\r\nimport ChatListItem from \"./ChatListItem\"\r\nimport { Edit3 } from \"react-feather\";\r\nconst defaultProfile = \"/images/butt-profile.jpeg\";\r\nexport default class ChatList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      newChatModalIsOpen : false,\r\n      groups: []\r\n    };\r\n  }\r\n  componentDidMount(){\r\n    this.getMyChats()\r\n  }\r\n  async getMyChats(){\r\n    const groups = await UserGroup.myGroups();\r\n    let finalGroups = [];\r\n    for(let group of groups){\r\n      if (group.attrs.members.length === 2){\r\n        finalGroups.push(group);\r\n      }\r\n    }\r\n    this.setState({\r\n      groups : finalGroups\r\n    })\r\n  }\r\n  openNewChatModal() {\r\n    this.setState({\r\n      newChatModalIsOpen: true\r\n    });\r\n  }\r\n  closeNewChatModal() {\r\n    this.setState({\r\n      newChatModalIsOpen: false\r\n    });\r\n  }\r\n \r\n  render() {\r\n    return (\r\n      <div className=\"chat-list-wrapper\">\r\n        <div>\r\n          <h1>Chats</h1>\r\n          {/* <div className=\"chat-header\">\r\n          <p>Chats</p>\r\n          <button className=\"btn btn-light\" data-toggle=\"tooltip\" title=\"New chat\"\r\n          onClick={this.openNewChatModal.bind(this)}><Edit3/></button>\r\n          </div>\r\n          <NewChat  modalIsOpen={this.state.newChatModalIsOpen}\r\n          closeModal={this.closeNewChatModal.bind(this)}/> */}\r\n        </div>\r\n        <div className=\"chat-list\">\r\n          {this.state.groups.length === 0 ? \r\n          \"You don't have any saucy convo yet. Initite some\" :\r\n          this.state.groups.map(group => {\r\n            return (\r\n              <ChatListItem group={group}\r\n              selectChat = {this.props.selectChat}/>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import { Model, UserGroup, User } from \"radiks\";\r\n\r\nexport default class Message extends Model {\r\n  static className = \"Message\";\r\n  static schema = {\r\n    sender : {\r\n      type: String,\r\n      required : true\r\n    },\r\n    content: {\r\n      type: String,\r\n      // required : true\r\n    },\r\n    byte: {\r\n      type: ArrayBuffer,\r\n      // required : true\r\n    },\r\n    type: {\r\n      type: String, //text, 'image','video','expirable-image'\r\n      required : true\r\n    },\r\n    duration : {\r\n      type : Number //seconds\r\n    },\r\n    userGroupId: {\r\n      type: String,\r\n      decrypted: true,\r\n      required : true\r\n    }\r\n\r\n  };\r\n  static defaults = {\r\n  }\r\n  static async sendTextMsg(txt , userGroupId){\r\n    const msg = new Message({\r\n      sender : User.currentUser()._id,\r\n      content : txt,\r\n      type : 'text',\r\n      userGroupId : userGroupId\r\n    })\r\n    await msg.save()\r\n    return msg;\r\n  }\r\n\r\n  static async sendPhotoMsg(binary , userGroupId){\r\n    const msg = new Message({\r\n      sender : User.currentUser()._id,\r\n      byte : binary,\r\n      type : 'photo',\r\n      userGroupId : userGroupId\r\n    })\r\n    await msg.save()\r\n    return msg;\r\n  }\r\n\r\n  static async sendExpirablePhotoMsg(binary, duration, userGroupId){\r\n    const msg = new Message({\r\n      content : binary,\r\n      type : 'expirable-photo',\r\n      duration: duration,\r\n      userGroupId : userGroupId\r\n    })\r\n    await msg.save()\r\n  }\r\n}\r\n// export default class PrivateGroupMessage extends UserGroup {\r\n//   static schema = {\r\n//     ...UserGroup.schema,\r\n//     description: {\r\n//       type: String\r\n//     },\r\n// };\r\n// }","import React, { Component } from \"react\";\r\nimport { Smile } from \"react-feather\";\r\nimport { Picker } from \"emoji-mart\";\r\nimport \"emoji-mart/css/emoji-mart.css\";\r\nimport { Camera } from \"react-feather\";\r\nimport { Link } from \"react-router-dom\";\r\nimport CameraModal from \"../Camera/CameraModal\";\r\nimport Message from \"../models/Message\"\r\nimport Photo from \"../Shared/photo\";\r\n\r\nconst uuidv4 = require('uuid/v4');\r\n\r\nconst TEXT_LIMIT = 1000;\r\n\r\nexport default class MessageInput extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      newComment: \"\",\r\n      characters: TEXT_LIMIT,\r\n      showEmojiPicker: false,\r\n      cameraModalIsOpen: false\r\n    };\r\n  }\r\n  componentDidMount(){\r\n  }\r\n  addEmoji(emoji) {\r\n    this.setState({\r\n      newComment: this.state.newComment + emoji.native,\r\n      characters: this.state.characters + 1\r\n    });\r\n  }\r\n  /**\r\n   * not being used\r\n   * @param {*} event \r\n   */\r\n  setNewComment(event) {\r\n    // console.log(event.target, event.keyCode, event.key)\r\n    if (this.state.characters < TEXT_LIMIT) {\r\n      this.setState({\r\n        newComment: event.target.value,\r\n        characters: event.target.value.length\r\n      });\r\n      if (event.target.value.length >= TEXT_LIMIT) {\r\n      }\r\n    }\r\n  }\r\n  async sendMessage(event){\r\n    if(event.key === \"Enter\"){\r\n      event.preventDefault()\r\n      try {\r\n        const newMessage = await Message.sendTextMsg(this.state.newComment, this.props.chatRoomId)\r\n        await this.props.sendMessage(newMessage)\r\n        await this.setState({\r\n          newComment : '',\r\n          characters: TEXT_LIMIT\r\n        })\r\n      } catch(e){\r\n\r\n      }\r\n    }\r\n  }\r\n  async sendPhoto(b64Data, chatRoomId){\r\n    console.log(chatRoomId)\r\n    const {userSession} = this.props;\r\n\r\n    const byteArray = Photo.b64tobinary(b64Data)\r\n    try {\r\n      const newMessage = await Message.sendPhotoMsg(byteArray, chatRoomId)\r\n      await this.props.sendMessage(newMessage)\r\n    } catch(e){\r\n\r\n    }\r\n  }\r\n  \r\n  handleChange(event) {\r\n    var appropriateLengthWords = event.target.value.substring(\r\n      0,\r\n      TEXT_LIMIT - 1\r\n    );\r\n    this.setState({\r\n      newComment: appropriateLengthWords,\r\n      characters: TEXT_LIMIT - event.target.value.length\r\n    });\r\n  }\r\n  toggleEmojiPicker() {\r\n    this.setState({\r\n      showEmojiPicker: !this.state.showEmojiPicker\r\n    });\r\n  }\r\n  openCameraModal() {\r\n    this.setState({\r\n      cameraModalIsOpen: true\r\n    });\r\n  }\r\n  closeCameraModal() {\r\n    this.setState({\r\n      cameraModalIsOpen: false\r\n    });\r\n  }\r\n\r\n  \r\n\r\n  render() {\r\n    return (\r\n      <div className=\"input-wrapper\">\r\n        <div>\r\n          <div\r\n            style={{\r\n              width: \"100%\",\r\n              display: \"flex\",\r\n              flexDirection: \" column \"\r\n            }}\r\n          >\r\n            <textarea\r\n              id=\"commentInput\"\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              placeholder=\"Drop a thought...\"\r\n              value={this.state.newComment}\r\n              onChange={this.handleChange.bind(this)}\r\n              onKeyDown={event => this.sendMessage(event)}\r\n            />\r\n            <div style={{ alignSelf: \"flex-end\" }}>\r\n              <small>\r\n                {this.state.characters}/{TEXT_LIMIT}\r\n              </small>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div\r\n          className=\"emoji-div\"\r\n          style={{ alignSelf: \"flex-start\", position: \"relative\" }}\r\n        >\r\n          <button\r\n            type=\"button \"\r\n            className=\"btn btn-emoji\"\r\n            data-toggle=\"tooltip\"\r\n            title=\"Insert an emoji\"\r\n            onClick={this.toggleEmojiPicker.bind(this)}\r\n            style={{ paddingTop: \"5px\" }}\r\n          >\r\n            <Smile size={\"24\"} />\r\n          </button>\r\n          <button\r\n            className=\"btn btn-emoji\"\r\n            onClick={this.openCameraModal.bind(this)}\r\n          >\r\n            <Camera size=\"24\" />\r\n          </button>\r\n          {this.state.showEmojiPicker && (\r\n            <Picker set=\"emojione\" onSelect={this.addEmoji.bind(this)} />\r\n          )}\r\n        </div>\r\n        <CameraModal\r\n          modalIsOpen={this.state.cameraModalIsOpen}\r\n          closeModal={this.closeCameraModal.bind(this)}\r\n          sendPhoto={this.sendPhoto.bind(this)}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","export default class TimeStamp {\r\n    static convertDate(posted) {\r\n        var postedTime = new Date(posted);\r\n        var currentTime = new Date();\r\n        var timeDiff = currentTime - postedTime;\r\n        var timeString = \" ago\";\r\n\r\n        var secDiff = Math.floor(timeDiff / 1000);\r\n        if(secDiff <= 60) {\r\n            timeString = secDiff.toString()+\"s ago\"\r\n        } else {\r\n            var minDiff = Math.floor(timeDiff / 1000 / 60);\r\n            if(minDiff <= 60) {\r\n                timeString = minDiff.toString()+\"m ago\"\r\n            } else {\r\n                var hourDiff=  Math.floor(timeDiff / 1000 / 3600);\r\n                \r\n                if (hourDiff <= 24) {\r\n                    timeString = hourDiff.toString() \r\n                    if (hourDiff > 1){\r\n                        timeString+=\" HOURS AGO\";\r\n                    } else{\r\n                        timeString+=\" HOUR AGO\";\r\n                    }\r\n                } else {\r\n                    var dayDiff = Math.floor(hourDiff/24);\r\n                    if (dayDiff <=7) {\r\n                        timeString = dayDiff.toString();\r\n                        if (dayDiff > 1){\r\n                            timeString+=\" DAYS AGO\";\r\n                        } else{\r\n                            timeString+=\" DAY AGO\";\r\n                        }\r\n                    } else {\r\n                        var options = { year : 'numeric', month: 'long', day : 'numeric' }\r\n                        timeString = postedTime.toLocaleDateString('en-US',options)\r\n                    }   \r\n                }\r\n            }\r\n        }\r\n        // this.setState({\r\n        //     timePosted : timeString\r\n        // })\r\n        return timeString\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport TimeStamp from \"../Shared/timestamp\";\r\nimport { UserSession } from \"blockstack\";\r\nimport Photo from \"../Shared/photo\";\r\nconst defaultProfile = \"/images/butt-profile.jpeg\";\r\n\r\nexport default class MessageItem extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    };\r\n  }\r\n  componentDidMount(){\r\n  }\r\n\r\n  render() {\r\n    const {msg} = this.props;\r\n    return (\r\n      <div className=\"msg-item\">\r\n        <div style={{ padding: \"0px 10px\" }}>\r\n          <div\r\n            className=\"photos\"\r\n            style={{\r\n              backgroundImage: `url(${defaultProfile})`,\r\n              backgroundPosition: \"center\",\r\n              backgroundSize: \"cover\",\r\n              backgroundRepeat: \"no-repeat\"\r\n            }}\r\n          />\r\n        </div>\r\n        <div>\r\n          <i>{msg.attrs.sender}</i>\r\n          <div className=\"msg-body\">\r\n            {msg.attrs.type==='text' && \r\n          <div>{msg.attrs.content}</div>}\r\n                      {msg.attrs.type==='photo' && \r\n          <img src={Photo.toBlob(this.props.msg.attrs.byte)} width=\"200px\"/>}\r\n          <small className=\"timestamp\">{TimeStamp.convertDate(msg.attrs.createdAt)}</small>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport ChatList from \"./ChatList\";\r\nimport MessageInput from \"./MessageInput\";\r\nimport MessageItem from \"./MessageItem\";\r\nimport { withRouter } from \"react-router\";\r\nimport Message from \"../models/Message\";\r\nimport ReactLoading from 'react-loading';\r\n\r\nclass ChatRoom extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      messageList: [],\r\n      img: \"\",\r\n      isLoading: false\r\n    };\r\n    const messageCallBack = message => {\r\n      if (\r\n        message.attrs.userGroupId === this.props.match.params.chatRoomId\r\n      ) {\r\n        this.fetchMessages();\r\n      }\r\n    };\r\n    Message.addStreamListener(messageCallBack.bind(this));\r\n  }\r\n  componentDidMount() {\r\n    if (this.props.match.params.chatRoomId) {\r\n      this.fetchMessages();\r\n    }\r\n  }\r\n  startLoading(){\r\n    this.setState({\r\n      isLoading: true\r\n    })\r\n  }\r\n  endLoading(){\r\n    this.setState({\r\n      isLoading: false\r\n    })\r\n  }\r\n  componentDidUpdate(prevProps) {\r\n    if (\r\n      prevProps.match.params.chatRoomId !==\r\n        this.props.match.params.chatRoomId &&\r\n      this.props.match.params.chatRoomId\r\n    ) {\r\n      this.startLoading()\r\n      this.fetchMessages().finally(()=>this.endLoading());\r\n    }\r\n  }\r\n  async fetchMessages() {\r\n    const messages = await Message.fetchList({\r\n      userGroupId: this.props.match.params.chatRoomId\r\n    });\r\n    // for(let msg of messages) {\r\n    //   await msg.destroy()\r\n    // }\r\n    this.setState({\r\n      messageList: messages\r\n    });\r\n  }\r\n\r\n  sendMessage(newMessage) {\r\n    let _messages = this.state.messageList;\r\n    _messages.push(newMessage);\r\n    this.setState({\r\n      messageList: _messages\r\n    });\r\n  }\r\n \r\n  render() {\r\n    return (\r\n      <div className=\"chat-room-wrapper\">\r\n        <div className=\"chat-room\">\r\n          {!this.props.match.params.chatRoomId ? (\r\n            <div>Select a friend to nuddle</div>\r\n          ) : this.state.isLoading ? (\r\n            <ReactLoading\r\n              type={\"cylon\"}\r\n              color={\"grey\"}\r\n              height={100}\r\n              width={100}\r\n            />\r\n          ) : this.state.messageList.length === 0 ? (\r\n            <i>\r\n              You don't have any message with this nudist. Spice it up now ;)\r\n            </i>\r\n          ) : (\r\n            this.state.messageList.map(msg => {\r\n              return <MessageItem msg={msg} \r\n              userSession = {this.props.userSession}/>;\r\n            })\r\n          )\r\n          // <img src={this.state.img}/>\r\n          }\r\n        </div>\r\n\r\n        <MessageInput\r\n          userSession={this.props.userSession}\r\n          sendMessage={this.sendMessage.bind(this)}\r\n          // postPhoto={this.postPhoto.bind(this)}\r\n          chatRoomId={this.props.match.params.chatRoomId}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(ChatRoom);\r\n","import React, { Component } from \"react\";\r\nimport ChatList from \"./ChatList\";\r\nimport ChatRoom from \"./ChatRoom\";\r\n\r\nexport default class Chat extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      selectedFriend: null\r\n    };\r\n  }\r\n  selectChat(selectedFriend){\r\n    this.setState({\r\n      selectedFriend : selectedFriend\r\n    })\r\n  }\r\n  componentDidMount(){\r\n  }\r\n  render(){\r\n    return(\r\n      <div className=\"chat-wrapper\">\r\n        <ChatList selectChat={this.selectChat.bind(this)}/>\r\n        <ChatRoom \r\n        userSession={this.props.userSession}\r\n        selectedFriend={this.state.selectedFriend} />\r\n      </div>\r\n    )\r\n  }\r\n}","import React, { Component } from \"react\";\r\nimport { UserSession, AppConfig, config } from \"blockstack\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport { User, configure, getConfig } from 'radiks';\r\n\r\nimport Home from \"./Home/Home.jsx\";\r\nimport Profile from \"./Profile/Profile.jsx\";\r\nimport Signin from \"./Nav/Signin.jsx\";\r\nimport Nav from \"./Nav/Nav.jsx\";\r\nimport Chat from \"./Chat/Chat.jsx\";\r\nimport CameraModal from \"./Camera/CameraModal.jsx\";\r\n\r\n\r\nconst appConfig = new AppConfig(['store_write', 'publish_data']);\r\nconst userSession = new UserSession({ appConfig: appConfig });\r\nconst apiServer = process.env.NODE_ENV === 'development' ? 'http://localhost:5000' : 'https://nuddle-server.herokuapp.com';\r\nconfigure({\r\n  apiServer: apiServer,\r\n  userSession\r\n});\r\nconfig.logLevel = 'none'\r\n\r\nexport default class App extends Component {\r\n  \r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      userSession\r\n    }\r\n  }\r\n\r\n  handleSignIn(e) {\r\n    e.preventDefault();\r\n    userSession.redirectToSignIn();\r\n  }\r\n\r\n  handleSignOut(e) {\r\n    e.preventDefault();\r\n    userSession.signUserOut(window.location.origin);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"site-wrapper\">\r\n          {!userSession.isUserSignedIn() ? (\r\n            <Signin\r\n              userSession={userSession}\r\n              handleSignIn={this.handleSignIn}\r\n            />\r\n          ) : (\r\n            <React.Fragment>\r\n              <Nav userSession={userSession}\r\n              handleSignOut={this.handleSignOut.bind(this)}/>\r\n              <div className=\"inner-wrapper\">\r\n              <Switch>\r\n                <Route\r\n                  exact\r\n                  path=\"/\"\r\n                  exact={true}\r\n                  render={props => (\r\n                    <Home\r\n                      {...props}\r\n                      userSession={userSession}\r\n                      handleSignIn={this.handleSignIn}\r\n                    />\r\n                  )}\r\n                />\r\n                <Route\r\n                  exact\r\n                  path={`/profile`}\r\n                  exact={true}\r\n                  render={props => (\r\n                    <Profile {...props} \r\n                    userSession={userSession}\r\n                    handleSignOut={this.handleSignOut.bind(this)} />\r\n                  )}\r\n                />\r\n                <Route\r\n                  exact\r\n                  path={`/chat`}\r\n                  exact={true}\r\n                  render={props => (\r\n                    <Chat {...props} \r\n                    userSession={userSession}\r\n                    />\r\n                  )}\r\n                />\r\n                <Route\r\n                  exact\r\n                  path={`/chat/:chatRoomId`}\r\n                  exact={true}\r\n                  render={props => (\r\n                    <Chat {...props}\r\n                    userSession={userSession}\r\n                    />\r\n                  )}\r\n                />\r\n                <Route\r\n                  exact\r\n                  path={`/camera`}\r\n                  exact={true}\r\n                  render={props => (\r\n                    <CameraModal {...props} />\r\n                  )}\r\n                />\r\n                <Redirect to=\"/\"/>\r\n              </Switch>\r\n              </div>\r\n            </React.Fragment>\r\n          )\r\n          }\r\n      </div>\r\n    );\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (userSession.isSignInPending()) {\r\n      userSession.handlePendingSignIn().then(async userData => {\r\n        window.history.replaceState({}, document.title, \"/\");\r\n        this.setState({ userData: userData });\r\n        await User.createWithCurrentUser()\r\n\r\n      });\r\n    } \r\n    // else if(userSession.isUserSignedIn()) {\r\n\r\n    // }\r\n  }\r\n}\r\n","import React from 'react'\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom'\nimport App from './App.jsx';\n\n// Require Sass file so webpack can build it\nimport 'bootstrap/dist/css/bootstrap.css';\nimport'./styles/style.css';\n\nReactDOM.render(<BrowserRouter><App /></BrowserRouter>, document.getElementById('root'));"],"sourceRoot":""}